package com.yrx.datasourcemanager.manager.dao;

import com.yrx.datasourcemanager.manager.pojo.ApiParamMapping;
import com.yrx.datasourcemanager.manager.pojo.ApiParamMappingExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface ApiParamMappingMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @SelectProvider(type=ApiParamMappingSqlProvider.class, method="countByExample")
    long countByExample(ApiParamMappingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @DeleteProvider(type=ApiParamMappingSqlProvider.class, method="deleteByExample")
    int deleteByExample(ApiParamMappingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @Delete({
        "delete from api_param_mapping",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @Insert({
        "insert into api_param_mapping (api_id, param_id, ",
        "param_zone, is_required, ",
        "process_step, create_author, ",
        "create_time, update_author, ",
        "update_time)",
        "values (#{apiId,jdbcType=INTEGER}, #{paramId,jdbcType=INTEGER}, ",
        "#{paramZone,jdbcType=TINYINT}, #{isRequired,jdbcType=BIT}, ",
        "#{processStep,jdbcType=VARCHAR}, #{createAuthor,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateAuthor,jdbcType=VARCHAR}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(ApiParamMapping record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @InsertProvider(type=ApiParamMappingSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(ApiParamMapping record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @SelectProvider(type=ApiParamMappingSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="api_id", property="apiId", jdbcType=JdbcType.INTEGER),
        @Result(column="param_id", property="paramId", jdbcType=JdbcType.INTEGER),
        @Result(column="param_zone", property="paramZone", jdbcType=JdbcType.TINYINT),
        @Result(column="is_required", property="isRequired", jdbcType=JdbcType.BIT),
        @Result(column="process_step", property="processStep", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_author", property="createAuthor", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_author", property="updateAuthor", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<ApiParamMapping> selectByExample(ApiParamMappingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @Select({
        "select",
        "id, api_id, param_id, param_zone, is_required, process_step, create_author, ",
        "create_time, update_author, update_time",
        "from api_param_mapping",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="api_id", property="apiId", jdbcType=JdbcType.INTEGER),
        @Result(column="param_id", property="paramId", jdbcType=JdbcType.INTEGER),
        @Result(column="param_zone", property="paramZone", jdbcType=JdbcType.TINYINT),
        @Result(column="is_required", property="isRequired", jdbcType=JdbcType.BIT),
        @Result(column="process_step", property="processStep", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_author", property="createAuthor", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_author", property="updateAuthor", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    ApiParamMapping selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @UpdateProvider(type=ApiParamMappingSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ApiParamMapping record, @Param("example") ApiParamMappingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @UpdateProvider(type=ApiParamMappingSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ApiParamMapping record, @Param("example") ApiParamMappingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @UpdateProvider(type=ApiParamMappingSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ApiParamMapping record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_param_mapping
     *
     * @mbg.generated Mon Sep 02 00:18:58 CST 2019
     */
    @Update({
        "update api_param_mapping",
        "set api_id = #{apiId,jdbcType=INTEGER},",
          "param_id = #{paramId,jdbcType=INTEGER},",
          "param_zone = #{paramZone,jdbcType=TINYINT},",
          "is_required = #{isRequired,jdbcType=BIT},",
          "process_step = #{processStep,jdbcType=VARCHAR},",
          "create_author = #{createAuthor,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_author = #{updateAuthor,jdbcType=VARCHAR},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ApiParamMapping record);
}